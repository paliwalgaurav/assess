{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div>\n  <h3>Filters</h3>\n  <select title=\"Sort\" (change)=\"filterCocktails($event, 'strCategory')\">\n    <option *ngFor=\"let category of categories\"\n            [value]=\"category\"\n            [label]=\"category\"\n    >{{category}}</option>\n  </select>\n\n  <select title=\"Sort\" (change)=\"filterCocktails($event, 'strIngredient')\">\n    <option *ngFor=\"let category of ingredients\"\n            [value]=\"category\"\n            [label]=\"category\"\n    >{{category}}</option>\n  </select>\n\n  <input\n    (change)=\"search($event)\"\n    placeholder=\"Search by name, ingredients, category\"\n  />\n\n  <div>Cocktails: {{cocktails.length}}</div>\n</div>\n\n<div *ngIf=\"cocktails && cocktails.length\">\n  <div class=\"cocktail-card\" *ngFor=\"let cocktail of cocktails\">\n    <div><img width=\"100%\" [src]=\"cocktail.strDrinkThumb\" [alt]=\"cocktail.strDrink\"/></div>\n    <div>\n      <div class=\"title\">{{cocktail.strDrink}}</div>\n      <div class=\"id\">{{cocktail.idDrink}}</div>\n      <div>{{cocktail.strAlcoholic}}</div>\n      <div class=\"category\">{{cocktail.strCategory}}</div>\n      <div>{{cocktail.strCreativeCommonsConfirmed}}</div>\n      <div>{{cocktail.strGlass}}</div>\n\n      <div class=\"ingredients\">\n        <span><strong>Ingredients: </strong></span>\n        <span>{{cocktail.strIngredient1}}, </span>\n        <span>{{cocktail.strIngredient2}}, </span>\n        <span>{{cocktail.strIngredient3}}</span>\n      </div>\n\n      <div class=\"instructions\">\n        <span><strong>Instructions: </strong></span>\n        <div>{{cocktail.strInstructions}}</div>\n        <div>{{cocktail.strInstructionsDE}}</div>\n      </div>\n\n      <div>\n        <span><strong>Intake: </strong></span>\n        <span>{{cocktail.strMeasure1}}</span>\n      </div>\n\n      <div class=\"date-modified\">Last updated: {{cocktail.dateModified}}</div>\n    </div>\n  </div>\n</div>\n\n<div *ngIf=\"!cocktails\">\n  <h3>Pour glass with another filter</h3>\n</div>\n\n\n<router-outlet></router-outlet>\n","import {Component, OnInit} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\nexport interface DrinksDetails {\n  dateModified: string;\n  idDrink: string;\n  strAlcoholic: string;\n  strCategory: string;\n  strCreativeCommonsConfirmed: string;\n  strDrink: string;\n  strDrinkThumb: string;\n  strGlass: string;\n  strIngredient1: string;\n  strIngredient2: string;\n  strIngredient3: string;\n  strInstructions: string;\n  strInstructionsDE: string;\n  strMeasure1: string;\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'cocktail';\n  public cocktails: Array<DrinksDetails> = [];\n  public categories: Array<string> = [];\n  public ingredients: Array<string> = [];\n\n  constructor(\n    private http: HttpClient\n  ) {}\n\n  ngOnInit(): void {\n    this.fetchCocktails();\n  }\n\n  fetchCocktails = async () => {\n    await this.http\n      .get(`https://www.thecocktaildb.com/api/json/v1/1/search.php/?s`)\n      .subscribe( cocktails => {\n        // @ts-ignore\n        this.cocktails = cocktails.drinks;\n        this.createCategoryFilter();\n        this.createIngredientsFilter();\n      });\n  }\n\n  createCategoryFilter = () => {\n    let options: Array<string> = [];\n    if (this.cocktails.length) {\n      options = options.concat([...new Set(this.cocktails.map(cocktail => cocktail.strCategory))]);\n    }\n    this.categories = options;\n  }\n\n  createIngredientsFilter = () => {\n    let options: Array<string> = [];\n    if (this.cocktails.length) {\n      options = options.concat([...new Set(this.cocktails.map(cocktail => cocktail.strCategory))]);\n    }\n    this.ingredients = options;\n  }\n\n  filterCocktails = (event: any, type?: string): Array<DrinksDetails> => {\n    if (type) {\n      // @ts-ignore\n      const cocktails = this.cocktails.filter((cocktail) => cocktail[type] === event.target.value);\n      this.cocktails = cocktails;\n    }\n    return this.cocktails;\n  }\n\n  search = (event: any): Array<DrinksDetails> => {\n    setTimeout(() => {\n      console.log(event.target.value);\n      return this.cocktails;\n    }, 500);\n    return [];\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {HttpClientModule} from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}